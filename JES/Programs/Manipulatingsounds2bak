def double(source):
  len = getLength(source) / 2 + 1
  target = makeEmptySound(len)
  targetIndex = 0
  for sourceIndex in range(0, getLength( source), 2):
    value = getSampleValueAt( source, sourceIndex)
    setSampleValueAt( target, targetIndex, value)
    targetIndex = targetIndex + 1
  play(target)
  return target


def shift(source, factor):
  target = makeEmptySound(getLength(source))
  sourceIndex = 0
  for targetIndex in range(0, getLength( target)):
    value = getSampleValueAt(source, int(sourceIndex))
    setSampleValueAt( target, targetIndex, value)
    sourceIndex = sourceIndex + factor
  play(target)
  return target

def sine():

  sineWave(440, 2000, 1)

  sineWave(880, 4000, 1)
  sineWave(1760, 8000, 1)

def sineWave(freq, amplitude, length):
  # Create a blank sound
  buildSin = makeEmptySoundBySeconds(length)
  # Set constants
  samplingRate = getSamplingRate(buildSin)
  interval = 1.0 / freq
  samplesPerCycle = interval * samplingRate
  maxCycle = 2 * pi
  # Generate the sound
  for pos in range(getLength(buildSin)):
    rawSample = sin((pos / samplesPerCycle) * maxCycle)
    sampleVal = int(amplitude * rawSample)
    setSampleValueAt(buildSin, pos, sampleVal)
  explore(buildSin)
  return buildSin
  
